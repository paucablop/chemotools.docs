# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, chemotools
# This file is distributed under the same license as the chemotools package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: chemotools \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-03 02:35+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/_learn/pls_classification.ipynb:9
msgid "**Classify coffees with PLS-DA**"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:20
msgid ""
"ðŸ’¡\\ **NOTE:** This document is a Jupyter notebook. You can download the "
"source file and run it in your Jupyter environment!"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:32
msgid "**Introduction**"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:34
msgid ""
"*Can you taste the difference between a coffee from Ethiopia, Brazil, or "
"Vietnam?*"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:36
msgid ""
"In this tutorial, we will use spectroscopy and machine learning to find "
"the origin of three different coffees produced in:"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:44
msgid ""
"These spectra have been collected from brewed coffee using Attenuated "
"Total Reflectance Mid-Infrared Spectroscopy (ATR-MIR)."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:46
msgid ""
"In this guide, we'll walk through the steps to create a classification "
"model that can differenciate the unique fingerprint of each coffee's "
"origin from its spectral signature."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:48
msgid ""
"So, grab your favorite coffee mug, prepare to delve into the world of "
"data-driven discovery, and let's embark on this aromatic journey."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:50
msgid ""
"ðŸ’¡\\ **NOTE:** In our dataset, we've roasted all the coffee under the same"
" conditions, but here's the twist: Ethiopian and Brazilian beans were "
"brewed into espresso, while Vietnamese coffee was brewed on a moka pot âœ¨"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:62
msgid "**Objective**"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:64
msgid ""
"In this exercise we will build a PLS-DA model to classify the origin of "
"coffee samples from three different origins."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:76
msgid "**Before starting**"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:78
msgid ""
"Before we start, you need to be sure to have the following dependencies "
"installed:"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:88
msgid "You can install them using"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:108
msgid "**Loading the coffee dataset**"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:110
msgid ""
"The coffee dataset can be directly accessed from the "
"``chemotools.datasets`` module, using the ``load_coffee()`` function."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:132
msgid ""
"The ``load_coffee()`` function returns two variables: ``spectra`` and "
"``labels``:"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:134
msgid ""
"``spectra``: A ``pandas.DataFrame`` containing the spectra of the coffee "
"samples as rows."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:135
msgid "``labels``: A ``pandas.DataFrame`` containing the origin of each sample."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:139
msgid ""
"ðŸ’¡\\ **NOTE:** If you are interested in working with ``polars.DataFrame`` "
"you can simply use the ``load_coffee(set_output=\"polars\")``."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:151
msgid "**Explore, plot and color**"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:153
msgid ""
"Before we dive deep into the coffee data analysis, we will quickly "
"inspect datasets. Let's get a snapshot of the data sizes and kickstart "
"our analysis."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:201
msgid ""
"The ``spectra`` dataset contains 60 samples (rows) and 1841 features "
"(columns). Each sample is a spectrum, and each feature is a wavenumber. "
"The ``labels`` dataset contains the origin of each sample. To analyze the"
" ``labels`` dataset we can use the ``value_counts()`` method from "
"``pandas`` and make a bar plot."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:259
msgid ""
"We have a balanced dataset with 20 samples per class. Now that we have a "
"better understanding of our data, let's start plotting the spectra. We "
"will plot the different spectra and color them by their origin."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:325
msgid ""
"Visually, we can see that there are some differences between the spectra "
"of the three coffees. However, we need to dig deeper to understand the "
"origin of such differences. Let's start with an exploratory analysis. We "
"can do that by using a Principal Component Analysis (PCA) to reduce the "
"dimensionality of the data."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:327
msgid ""
"To do so, we will first mean center the data using the "
"``StandardScaler()`` preprocessing method from ``scikit-learn``. Then, we"
" will use the ``PCA()`` method, also from ``scikit-learn``, to reduce the"
" dimensionality of the data to two principal components. Finally, we will"
" plot the scores and color them according to the origin of the coffee."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:329
msgid ""
"ðŸ’¡\\ **NOTE:** When using spectroscopic data, we do not want to scale the "
"spectra to unit variance. Instead, we want to mean center the data. This "
"is because the variance of the spectra is related to the absorbance of "
"the sample. If we scale the data to unit variance, we will lose the "
"information about the absorbance of the sample. We can mean center the "
"data using the ``StandardScaler()`` and setting the ``use_std`` argument "
"to ``False``."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:413
msgid ""
"The results show that there are some differences between the spectra of "
"the three coffes."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:425
msgid "**Preprocessing the spectra**"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:427
msgid ""
"The objective of the preprocessing is to remove from the spectra non-"
"chemical systematic variation, such as baseline shifts or scattering "
"effects. There has been a lot of research on the preprocessing of "
"spectroscopic data, and this is where ``chemotools`` becomes very handy: "
"we harness the power of such research and make it available to you using "
"``scikit-learn`` standards."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:429
msgid ""
"We will build the preprocessing steps in a pipeline using the "
"``make_pipeline()`` method from ``sklearn.pipeline``. A `pipeline "
"<https://paucablop.github.io/chemotools/get-"
"started/scikit_learn_integration.html#working-with-pipelines>`__ is a "
"sequence of steps that are applied to the data in a given order. In our "
"case, we will apply the following steps:"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:431
msgid ""
"`Standard normal variate (SNV) "
"<https://paucablop.github.io/chemotools/docs/scatter.html#standard-"
"normal-variate>`__ to remove scattering effects."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:433
msgid ""
"`Derivative <https://paucablop.github.io/chemotools/docs/derivative.html"
"#savitzky-golay-derivative>`__ to remove both additive and multiplicative"
" scattering effects."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:435
msgid ""
"`Range cut "
"<https://paucablop.github.io/chemotools/docs/feature_selection.html"
"#range-cut>`__ to select the most relevant wavenumbers."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:437
msgid ""
"`Standardize <https://scikit-"
"learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html>`__"
" remove the mean from the dataset."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:470
msgid ""
"ðŸ’¡\\ **NOTE:** This is cool! See how we are integrating chemometrics with "
"``scikit-learn``? ``StandardNormalVariate``, and ``SavitizkyGolay`` and "
"``RangeCut`` are all preprocessing techniques implemented in "
"``chemotools``, while ``StandardScaler`` and ``pipelines`` are "
"functinlaities provided by ``scikit-learn``. This is the power of "
"``chemotools``, it is designed to work seamlessly with ``scikit-learn``."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:472
msgid ""
"Let's plot the preprocessed spectra to see the effect of the "
"preprocessing steps."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:509
msgid "**Building a classifier**"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:511
msgid ""
"In this section, we'll dive into the world of classification. Our goal? "
"To create a classification model that can distinguish the origins of our "
"coffees using their spectral signatures."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:513
msgid ""
"Partial Least Squares Discriminant Analysis (PLS-DA) is a simple "
"statistical technique used for classification. PLS-DA models the "
"relationship between input variables (spectral data) and class labels "
"(coffee origins), allowing it to classify new samples based on their "
"spectral signatures with high accuracy. It's a powerful tool for pattern "
"recognition in complex datasets, making it ideal for our coffee origin "
"classification."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:515
msgid ""
"Before we start our PLS-DA algorithm, we need to encode the labels into "
"numbers. We can do that using the ``LabelEncoder()`` method from "
"``scikit-learn``."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:517
msgid ""
"``LabelEncoder()`` will assign a categorical value to each of the labels "
"in our dataset (0 for Brasil, 1 for Ethiopia an 2 for Vietnam)."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:546
msgid ""
"Now that our coffee origin labels have been encoded into numerical "
"values, we are ready to train our PLS-DA model. However, before we start,"
" we will divide our data into a training and a testing sets using the "
"``train_test_split()`` method from the ``scikit-learn`` library."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:548
#, python-format
msgid ""
"Our strategy is to allocate 80% of our dataset for training our model, "
"allowing it to learn from disticnt features from spectral data, while "
"reserving the remaining 20% for testing. This division ensures that our "
"model's performance can be evaluated on unseen data, a crucial step in "
"assessing its real-world applicability and predictive power."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:572
msgid ""
"ðŸ’¡\\ **NOTE:** We set the ``random_state`` argument to 42 to ensure "
"reproducibility of the results."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:574
msgid ""
"Now that we have our training and testing sets, we can start building our"
" PLS-DA model. We will use the ``PLSRegression()`` method from ``scikit-"
"learn``. We will set the number of components to 2 and the ``scale`` "
"argument to ``False``. This is because we have already scaled the data in"
" the preprocessing step."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:603
msgid ""
"ðŸ’¡\\ **NOTE:** We have chosen two components because from our PCA analysis"
" we saw that using two components we can separate the three classes."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:605
msgid ""
"Now that we have trained our model, we can evaluate its performance. We "
"will use the `accuracy score <https://scikit-"
"learn.org/stable/modules/generated/sklearn.metrics.accuracy_score.html>`__"
" and the `confusion matrix <https://scikit-"
"learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html>`__"
" methods from ``scikit-learn`` to evaluate the performance of the model."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:665
msgid "**Recap**"
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:667
msgid ""
"**The Coffee Dataset:** Explore the unique world of coffee "
"differentiation through Infrared Spectroscopy. This dataset contains IR "
"spectra of coffee samples from Ethiopia, Brazil, and Vietnam."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:669
msgid ""
"**Importing the Data:** Effortlessly load the coffee spectra into a "
"Pandas DataFrame using chemotools, making data analysis a breeze."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:671
msgid ""
"**Explore, Plot, and Color:** Gain insights into the dataset's size and "
"composition, showcasing its 60 samples and 1841 features. Visualize the "
"data with colorful coffee spectra plots."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:673
msgid ""
"**Preprocessing the Spectra:** Dive into the world of preprocessing, "
"where chemotools comes into play. Eliminate non-chemical systematic "
"variations using techniques like Standard Normal Variate (SNV), "
"Derivative, Range Cut, and Standardization."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:675
msgid ""
"**Modelling the Data:** Enter the realm of machine learning with Partial "
"Least Squares Discriminant Analysis (PLS-DA), a powerful tool for "
"classification. Encode labels into numerical values and split the data "
"into training and testing sets. Train the model and evaluate its "
"performance, achieving an impressive confusion matrix."
msgstr ""

#: ../../source/_learn/pls_classification.ipynb:677
msgid ""
"This tutorial showcases the beauty of data science and chemistry, "
"bringing the art of coffee classification to life within the rich world "
"of spectral data."
msgstr ""

